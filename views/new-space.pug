extends masebook
include form-mixins

block scripts
    script.
        const actions = {
            createSpace: async (space) => {
                const fetchOptions = {
                    method: 'POST',
                    redirect: 'follow',
                    headers: {
                        "Content-Type": "application/json",
                        Accept: "application/json"
                    },
                    body: JSON.stringify(space),
                }
                try {
                    return await fetch('/s', fetchOptions);
                }
                catch (error) {
                    console.log(error.message);
                }
            },
        }

block title
    title New Space

block content
    h1 New Space
    p#status
    form#space-editor
        +textField(
            'settings.title',
            'Title',
            'Must be unique.'
        )(minlength=1, maxlength=64, required)
        +textField(
            'settings.description',
            'Description'
        )
        +textField(
            'shortname',
            'shortname',
            'A unique identifier for this space that will be used in its URL. Can only contain alphanumeric characters and underscores. Must start with a character from the alphabet.'
        )(minlength=3, maxlength=32, required, pattern='^[a-z][a-z0-9_-]{2,31}$')

        +checkBox('settings.public', 'Public (visible to non-members)', false)
        +checkBox('settings.show_in_dir', 'Show in Server Directory', true)
        
        fieldset.form-item#permissions-editor
            legend Permissions
            span.permissions-col-header='role required to...'

            - for (let i=0; i < levelToRole.length; i++)
                span.permissions-col-header(id='permission-label-'+i)=levelToRole[i]
            +permission('permissions.view_members', 'view members', 1)
            +permission('permissions.view_posts', 'view posts', 1)
            +permission('permissions.create_posts', 'create posts', 1)
            +permission('permissions.delete_posts', 'delete posts', 2)
            +permission('permissions.view_comments', 'view comments', 1)
            +permission('permissions.create_comments', 'view comments', 1)
            +permission('permissions.delete_comments', 'view comments', 2)
        
        .form-item
            label(for='submit')
                input#submit(type='submit', value='submit')
    script.
        const form = elements['space-editor']
        form.addEventListener('submit', async event => {
            event.preventDefault();

            // UI waiting state
            elements['submit'].disabled = true;

            // Format data for use by backend
            const data = Object.fromEntries((new FormData(form)).entries());
            const space = expand(data);

            // Send request
            const res = await actions.createSpace(space);

            // UI success state
            if (res.redirected) {
                window.location.href = res.url;
                return;
            }
            // UI failure state
            else {
                const details = await res.json();
                elements['status'].classList.add('failure');
                elements['submit'].disabled = false;
                elements['status'].textContent = `ERROR: ${details.msg}`;
                if (details.issues) {
                    for (const k in details.issues) {
                        const id = k + '_issue';
                        const element = document.getElementById(id);
                        element.textContent = details.issues[k];
                    }
                }
                elements['content'].scroll({top: 0, left: 0, behavior: 'smooth'})
            }
        });