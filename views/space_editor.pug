extends masebook.pug

block title
    - const titleText = space.name ? `Edit Space | ${space.name}` : 'New Space'
    title= titleText

mixin textField(id, label, hint)
    .form-item
        label(for=id)
            span.field-label.block=label
                if attributes.required
                    <span aria-label="required">*</span>
            if hint
                span.field-hint=hint 
            input(type='text', id=id, name=id)&attributes(attributes)

mixin checkBox(id, label, checked)
    .form-item
        label(for=id)
            input(id=id, type='checkbox', name=id, checked=checked)
            span.field-label.inline=label

mixin permission(id, label, default_role)
    span.field-label.block=label
    - for (let i=0; i<roles.length; i++)
        input(type='radio', name=id, value=i, checked=(i === default_role))


mixin options(default_index)
    - for (let i=0; i<roles.length; i++ )
        if (i == default_index)
            option(value=i selected)= roles[i]
        else
            option(value=i)= roles[i]

block content
    h1= titleText
    form#space-editor
        +textField(
            'identifier',
            'Unique Identifier',
            'Will be used in the URL for this space. Must contain only alphanumeric characters and underscores. Cannot start with a digit or contain spaces.'
        )(minlength=1, maxlength=64, required)
        +textField(
            'display_name',
            'Display Name'
        )(minlength=1, maxlength=64, required)
        +textField(
            'description',
            'Description'
        )(minlength=1, maxlength=256)
        +checkBox('visible', 'Visible to non-members', defaults.settings.visible)
        +checkBox('show_in_dir', 'Show in Server Directory', defaults.settings.show_in_dir)
        
        fieldset.form-item#permissions
            legend Permissions
            span.permissions-col-header='role required to...'
            each role in roles
                span.permissions-col-header=role
            +permission('view_members', 'view members', 1)
            +permission('view_posts', 'view posts', 1)
            +permission('create_posts', 'create posts', 1)
            +permission('delete_posts', 'delete posts', 2)
            +permission('view_comments', 'view comments', 1)
            +permission('create_comments', 'view comments', 1)
            +permission('delete_comments', 'view comments', 2)
        
        input.form-item(type='submit', value='submit')
    script.
        const form = document.getElementById('space-editor');
        form.addEventListener('submit', async event => {
            event.preventDefault();
            const data = new FormData(form);

            const reformatted = {
                settings: {},
                permissions: []
            };

            for (const [k,v] of data.entries()) {
                if (k.startsWith('p_')) {
                    reformatted.permissions.push([k.substring(2),v]);
                }
                else {
                    reformatted.settings[k] = v;
                }
            }

            try {
                const fetchOptions = {
                    method: 'POST',
                    headers: {
                        "Content-Type": "application/json",
                        Accept: "application/json"
                    },
                    body: JSON.stringify(reformatted),
                }
                fetch('/s', fetchOptions)
                    .then(res => {
                        if (res.redirected) {
                            window.location.href = res.url;
                        }
                    });
            }
            catch (err) {
                console.log(err.message);
            }
        });